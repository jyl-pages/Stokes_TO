import os
import inspect
import glob

# try to import an environment first
try:
  Import('env')
except:
  exec open("../../build/build-env.py")
  env = Environment()

env.Append(CPPPATH = [os.environ["HOME"] + "/.local/include"])
env.Append(LIBPATH = [os.environ["HOME"] + "/.local/lib"])
env.Append(LIBS = ["openblas"])

if env['compiler'] == "nvcc":
  env.Append(LIBS = ["cublas"])

# find all .cus & .cpps in the current directory
sources = []
directories = ['.']
extensions = ['*.cu', '*.cpp']
for dir in directories:
  for ext in extensions:
    regexp = os.path.join(dir, ext)
    sources.extend(glob.glob(regexp))

# compile examples
for src in sources:
  env.Program(src)

